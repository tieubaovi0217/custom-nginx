events {}
http {
	default_type application/octet-stream;
  
	include /etc/nginx/mime.types;
	include /etc/nginx/proxy.conf;

  	upstream backend {
		least_conn;
		server backend-1:5000;
  	}

	server {
		listen 8080 ssl;

		ssl_certificate /etc/nginx/ssl/example.crt;
		ssl_certificate_key /etc/nginx/ssl/example.key;

		client_max_body_size 1024M;

		add_header "Access-Control-Allow-Origin" * always;
		add_header "Access-Control-Allow-Methods" "GET, PUT, POST, PATCH, OPTIONS, HEAD, DELETE";
		add_header "Access-Control-Allow-Headers" "Range, Authorization, Origin, X-Requested-With, Content-Type, Accept, Content-Disposition";
		add_header "Access-Control-Expose-Headers" "Accept-Ranges, Content-Encoding, Content-Length, Content-Range";

		if ($request_method = OPTIONS) {
			return 204;
		}

		location /EditorPage {
			root /var/www;
			index index.html;
		}
		
		location /root {
			auth_request /auth;
			root  /tmp;
			try_files $uri $uri/ =404;
			autoindex on;
			autoindex_exact_size off;
			autoindex_format json;
			autoindex_localtime on;
		}

		location = /auth {
			internal;
			set $query '';
			if ($request_uri ~* "[^\?]+\?(.*)$") {
				set $query $1;
			}
			proxy_pass                https://backend/auth/is_auth?$query;
			proxy_pass_request_body   off;
			proxy_set_header          Content-Length "";
			proxy_set_header          X-Original-URI $request_uri;
		}

		location / {
			proxy_pass https://backend/;
		}
	}
}